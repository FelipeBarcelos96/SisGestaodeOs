package br.com.ufes.sisgestaoOS.main;

public class Testes {

	public static void main(String[] args) {
		
		/*
		try {
			System.out.println(Integer.toString(UsuarioDao.getInstance().get(11).getId()));
		} catch (SQLException e) {			
			e.printStackTrace();
		}
		
		
		Date time;
		time = new Date(Timestamp.valueOf(LocalDateTime.now()).getTime());
		System.out.println(time);
		Connection conn = OracleConnector.getInstance().connect();
		Requisito req = new Requisito(
		new Usuario(9, "ANALISTA 2", "tecsis", Boolean.FALSE, Boolean.FALSE,Boolean.FALSE,Boolean.TRUE,
				new Equipe(
						2, "ANALISTAS "
						)
				)
		, "X", "X", new Timestamp(Timestamp.valueOf(LocalDateTime.now()).getTime())
		);
		
		
		*/
		
		/*
		try {
		String sql = "SELECT COUNT(*) AS EXISTE FROM REQUISITOS WHERE NOMEREQ = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, req.getTitulo().toUpperCase());
        ResultSet rs = stmt.executeQuery();
        rs.next();
        if(0 != rs.getInt("EXISTE"))
        	System.out.println("Já Existe um Requisito Cadastrado com este Título!");
        else{
          sql = "INSERT INTO REQUISITOS (CODANALISTA, NOMEREQ, DESCRREQ, PRAZO) VALUES (?,?,?,?)";
          stmt = conn.prepareStatement(sql);
          System.out.println(
        		  req.getAnalista().getId()+" "+
        		  req.getTitulo().toUpperCase()+" "+
        		  req.getDescricao()+" "+
        		  req.getPrazo().toString()+" "
        		  );
          stmt.setInt(1, req.getAnalista().getId());
          stmt.setString(2, req.getTitulo().toUpperCase());
          stmt.setString(3, req.getDescricao());
          stmt.setDate(4, null);
          stmt.execute(); 
          
          sql = "SELECT CODREQ FROM REQUISITOS WHERE NOMEREQ = ?";
          stmt = conn.prepareStatement(sql);
          stmt.setString(1, req.getTitulo().toUpperCase());
        
        rs = stmt.executeQuery();
        rs.next();
        req.setCodReq(rs.getInt("CODREQ"));
        }
        
			stmt.close();
		} catch (SQLException e) {
			System.out.println("Erro: ");
			e.printStackTrace();
		}
		
		*/
		
		/*
		String logo = "";
		ManipuladorArquivo.getInstance().criaArquivo("logos", "1", "Ainda mais uma Logo.png", logo);
		*/
		/*
		try {
		ArrayList<File> arquivos = ManipuladorArquivo.getInstance().pegaArquivos("ordens", "5");
		
		ArrayList<String>arquivosString = new ArrayList<>();
		
		for(File arquivo : arquivos) {
			System.out.println(arquivo.getName());
				arquivosString.add(ManipuladorArquivo.getInstance().convertFileToString(arquivo));
			
		}
		
		String arquivosJson = new Gson().toJson(arquivos);

		System.out.println(arquivosString);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/
		/*
		try {
		
		  File arquivo = ManipuladorArquivo.getInstance().pegaArquivo("ordens", "5");
		 
		  String bin = ManipuladorArquivo.getInstance().convertFileToString(arquivo);

	      ManipuladorArquivo.getInstance().criaArquivo("logos", "1", "Caso de Uso OS.png", bin, "info");
		  
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/
	}
	
}
